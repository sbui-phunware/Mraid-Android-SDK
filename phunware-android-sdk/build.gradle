apply plugin: 'com.android.library'

def versionMajor = 1
def versionMinor = 2
def versionPatch = 8

def numericVersionCode = 8

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode numericVersionCode
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
//    compile fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.appcompatV7
    implementation rootProject.ext.playServicesAds

    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.okio:okio:1.11.0'
}

task deleteJar(type: Delete) {
    delete '../build/phunware-android-sdk.jar'
}

task createJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('../build/')
    include('classes.jar')
    rename('classes.jar', 'phunware-android-sdk.jar')
}

createJar.dependsOn(deleteJar, build)
